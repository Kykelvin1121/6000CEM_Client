{"version":3,"file":"static/js/20.7f7c4a45.chunk.js","mappings":"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","sources":["pages/UserProfile/UserProfile.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { db, auth } from \"../../FirebaseConfig\";\r\nimport { doc, getDoc, updateDoc } from \"firebase/firestore\";\r\nimport './UserProfile.css';\r\n\r\nconst UserProfile = () => {\r\n  const [userProfile, setUserProfile] = useState({\r\n    displayName: \"\",\r\n    username: \"\",\r\n    phoneNumber: \"\",\r\n    address: \"\",\r\n    country: \"\",\r\n  });\r\n\r\n  // Function to fetch the user's profile data from Firestore\r\n  const fetchUserProfile = async () => {\r\n    const user = auth.currentUser;\r\n    if (user) {\r\n      const userDocRef = doc(db, \"users\", user.uid);\r\n      const docSnapshot = await getDoc(userDocRef);\r\n      if (docSnapshot.exists()) {\r\n        setUserProfile(docSnapshot.data());\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 1);\r\n    fetchUserProfile();\r\n  }, []);\r\n\r\n  // Function to handle profile data updates\r\n  const handleProfileUpdate = async () => {\r\n    try {\r\n      const user = auth.currentUser;\r\n      if (user) {\r\n        const userDocRef = doc(db, \"users\", user.uid);\r\n        await updateDoc(userDocRef, userProfile);\r\n        console.log(\"User profile updated\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error updating user profile:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"profile-container\">\r\n      <h1>User Profile</h1>\r\n      <div className=\"profile-form\">\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"displayName\">Display Name:</label>\r\n          <input\r\n            className=\"profile-input\"\r\n            type=\"text\"\r\n            id=\"displayName\"\r\n            value={userProfile.displayName}\r\n            onChange={(e) => setUserProfile({ ...userProfile, displayName: e.target.value })}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"username\">Username:</label>\r\n          <input\r\n            className=\"profile-input\"\r\n            type=\"text\"\r\n            id=\"username\"\r\n            value={userProfile.username}\r\n            onChange={(e) => setUserProfile({ ...userProfile, username: e.target.value })}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"phoneNumber\">Phone Number:</label>\r\n          <input\r\n            className=\"profile-input\"\r\n            type=\"text\"\r\n            id=\"phone\"\r\n            value={userProfile.phone}\r\n            onChange={(e) => setUserProfile({ ...userProfile, phoneNumber: e.target.value })}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"address\">Address:</label>\r\n          <input\r\n            className=\"profile-input\"\r\n            type=\"text\"\r\n            id=\"address\"\r\n            value={userProfile.address}\r\n            onChange={(e) => setUserProfile({ ...userProfile, address: e.target.value })}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"country\">Country:</label>\r\n          <input\r\n            className=\"profile-input\"\r\n            type=\"text\"\r\n            id=\"country\"\r\n            value={userProfile.country}\r\n            onChange={(e) => setUserProfile({ ...userProfile, country: e.target.value })}\r\n          />\r\n        </div>\r\n        <button className=\"profile-button\" onClick={handleProfileUpdate}>Update Profile</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UserProfile;"],"names":["_useState","useState","displayName","username","phoneNumber","address","country","_useState2","_slicedToArray","userProfile","setUserProfile","fetchUserProfile","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","user","userDocRef","docSnapshot","wrap","_context","prev","next","auth","doc","db","uid","getDoc","sent","exists","data","stop","apply","arguments","useEffect","window","scrollTo","handleProfileUpdate","_ref2","_callee2","_context2","updateDoc","console","log","t0","error","_jsxs","className","children","_jsx","htmlFor","type","id","value","onChange","e","_objectSpread","target","phone","onClick"],"sourceRoot":""}